"use strict";(self.webpackChunkasgardians=self.webpackChunkasgardians||[]).push([[7660],{3155:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"Agile","metadata":{"permalink":"/AsgardiansCode/blog/Agile","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/Agile.md","source":"@site/blog/Agile.md","title":"Agile","description":"Agile - the ability to continuously adapt and make improvements to the way team works","date":"2021-10-29T20:18:41.319Z","formattedDate":"October 29, 2021","tags":[{"label":"agile","permalink":"/AsgardiansCode/blog/tags/agile"},{"label":"scrum","permalink":"/AsgardiansCode/blog/tags/scrum"}],"readingTime":3.165,"truncated":true,"authors":[{"name":"Thimira Nirmal","title":"Undergraduate of USJ","imageURL":"https://avatars.githubusercontent.com/u/42657815?s=400&u=0f92f82c8a7caab60a1c5139b0e10dbfe9d849f8&v=4","key":"timnirmal"}],"nextItem":{"title":"Chess-AI","permalink":"/AsgardiansCode/blog/Chess-AI"}},"content":"Agile - the ability to continuously adapt and make improvements to the way team works\\n\\n## Scrum\\nScrum is an agile project management framework. It helps teams to work together. Scrum is a framework and agile is a mindset.\\nScrum is agile when it is used by people who practicing agile principles. And following  agile values\\nScrum encourages teams to learn through experiences to continuously improve, self-organize while working on a problem.\\n\\n\\n\x3c!--truncate--\x3e\\n\\nPlaning -> Daily Scrum -> Review/ Demo -> Retrospective\\nThis one process is called as a sprint.\\nSprint is from 2 to 4 weeks.\\n\\n## Artifact\\n\\nProduct Backlog\\nSprint Backlog\\nIncrement\\n\\n### Product Backlog\\n\xb7   \\tList of things the product owner wants. This is maintained by the product owner. (features, requirements, enhancements, and fixes)\\nOrdered list of features that owner sees as a greater return of values\\n\xb7   \\tproduct backlog is constantly revisited, re-prioritized, and maintained.\\nBecause market changes, new things learn when project on going.\\nFor example, some items may no longer be relevant or problems may get solved in other ways.\\n\\n### sprint backlog\\nItems or user stories selected to be done in the current sprint cycle.\\nSo in the sprint meeting, this chosen by product backlog.\\nA sprint backlog may be flexible but the sprint goal should be fixed once the sprint begins.\\n\\n### Increment / Sprint Goal\\nUsable end product of sprint.\\nThis is usually a demo during the end-of-sprint demo, where shows what done in the sprint.\\nNew release of software, Potentially shippable of deployable.\\n\\n## Scrum Ceremonies or Events\\nThese are events or meetings done by scrum teams on regular basis.\\nBacklog Grooming\\nSpring Planning\\nDaily Scrum\\nSprint Review\\nSprint Retrospective\\n\\n### Backlog grooming\\nThis event is the responsibility of the product owner. Organize the backlog\\n\\n### Sprint Planning\\nThis is lead by the scrum master.\\nIn here The team defines the works and the sprint goal they need to achieve in the upcoming sprint.\\nSpecific user stories are added to the sprint from the product backlog.\\nThese stories align with the sprint goal and the team agrees that the goal is feasible during the sprint.\\n\\n### Daily Scrum / Stand up\\nIs a short meeting that happen at the same time of the day. It usually takes like 15 min in the morning. The team will be stand and face to face, so they can stay focus.\\nThe goal of the stand-up meeting is to make sure that everyone is on the same page, aligned with the sprint goal, and what to do in  24 hours.\\nThis Helps to adapt to change and new information and keep transparency.\\n\\nIn the stand-up meeting team member talk about,\\nWhat did I do yesterday?\\nWhat do I plan to do today?\\nAre there any obstacles?\\n\\n#### Rules\\nNeed to be stand\\nFocus\\nNo need to go deeper\\nOn-time\\nNo side conversations\\nNo Phone and texting\\n\\n### Sprint Review\\nCollaborative meetings show what is accomplished and get feedback from stakeholders. This is kind of a demo but with true transverse. This feedback is used to plan the next sprint.\\n\\n### Sprint Retrospective\\nThis meet helps to reflect on how things have gone and how things can be improved.\\nFollow agile Principe \u201cReflect how to be more efficient and adjust accordingly\u201d\\n\\n## Roles\\n\\nProduct owner - defining or sequencing the work\\nThe product owner\u2019s main jobs are to drive the product towards its product vision and have a constant pulse on the market and the customer. Therefore, he/she maintains this list using feedback from users and the development team to help prioritize and keep the list clean and ready to be worked on at any given time\\n\\nScrum Master - keep things organized.\\n\\nDev team - Does the work. Dev software or other work.\\n\\n\\n[https://blog.markshead.com/](https://blog.markshead.com/)\\n\\n[https://geekbot.com/blog/daily-standup-meeting/](https://geekbot.com/blog/daily-standup-meeting/)\\n\\n[https://www.agilealliance.org/glossary/scrum-master/#q=~(infinite~false~filters~(postType~(~\'page~\'post~\'aa_book~\'aa_event_session~\'aa_experience_report~\'aa_glossary~\'aa_research_paper~\'aa_video)~tags~(~\'scrum*20master))~searchTerm~\'~sort~false~sortDirection~\'asc~page~1)](https://www.agilealliance.org/glossary/scrum-master/#q=~(infinite~false~filters~(postType~(~\'page~\'post~\'aa_book~\'aa_event_session~\'aa_experience_report~\'aa_glossary~\'aa_research_paper~\'aa_video)~tags~(~\'scrum*20master))~searchTerm~\'~sort~false~sortDirection~\'asc~page~1))\\n\\n[https://www.workfront.com/project-management/methodologies/scrum/sprint-planning](https://www.workfront.com/project-management/methodologies/scrum/sprint-planning)"},{"id":"Chess-AI","metadata":{"permalink":"/AsgardiansCode/blog/Chess-AI","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/Chess-AI.md","source":"@site/blog/Chess-AI.md","title":"Chess-AI","description":"This project is made with chess and chesscoardjs.","date":"2021-10-29T20:18:41.319Z","formattedDate":"October 29, 2021","tags":[{"label":"Chess","permalink":"/AsgardiansCode/blog/tags/chess"},{"label":"AI","permalink":"/AsgardiansCode/blog/tags/ai"}],"readingTime":5.12,"truncated":false,"authors":[{"name":"Thimira Nirmal","title":"Undergraduate of USJ","imageURL":"https://avatars.githubusercontent.com/u/42657815?s=400&u=0f92f82c8a7caab60a1c5139b0e10dbfe9d849f8&v=4","key":"timnirmal"}],"prevItem":{"title":"Agile","permalink":"/AsgardiansCode/blog/Agile"},"nextItem":{"title":"Industry and WFH","permalink":"/AsgardiansCode/blog/Industry"}},"content":"This project is made with [chess](https://github.com/jhlywa/chess.js) and [chesscoardjs](https://github.com/oakmac/chessboardjs/).\\n\\nFor AI, minimax algorithm and Piece-square tables are used.\\n\\nYou can view the final output in here, [https://timnirmal.github.io/Chess-AI/](https://timnirmal.github.io/Chess-AI/)\\n\\nCode files Github : [https://github.com/timnirmal/Chess-AI](https://github.com/timnirmal/Chess-AI)\\n\\nEach step can be found in respective commit,\\n- Initial commit - Basic Chess Board Setup files to start\\n- Allow only Legal Moves\\n- Simple Status\\n- Computer Play Random\\n- Computer Play Random both side\\n- Highlight Legal Moves\\n- AI Done (Minimax with Alpha Beta)\\n\\nSo that\'s about the introduction. Lets begging Project.\\n\\n## Setup Chess Board\\n\\nIn initial commit all the files need to make the game is included. So go there and start your journey.\\n\\nEven though below functions are empty you still need them to get output + we will use them later.\\n\\n```js\\nonDragStart, onDrop, onSnapEnd, onMouseoverSquare, onMouseoutSquare\\n```\\n\\nWe can use ```config``` to do the configurations.\\n\\n<details>\\n    <Summery></Summery>\\n    If you want you can simply delete that and go with\\n    \\tboard = ChessBoard(\'board\', start);\\n</details>\\n\\n\\nNote that at this point it only show the Board and the Chess Pieces.\\n\\n\\n\\n## Configurations\\n\\n### Orientation\\n\\nOrientation can be either white or black which is the side you play.\\n\\n### Notation\\n\\nNotation is boolean values which used to on and off board notation\\n\\n### Show Positions and FEN in console\\n\\n```html\\n<button id=\\"showPositionBtn\\">Show position in console</button>\\n```\\n\\n```js\\n$(\'#showPositionBtn\').on(\'click\', clickShowPositionBtn)\\n\\nfunction clickShowPositionBtn () {\\n    console.log(\'Current position as an Object:\')\\n    console.log(board.position())\\n\\n    console.log(\'Current position as a FEN string:\')\\n    console.log(board.fen())\\n}\\n```\\n\\nAfter preparing board, and now we can make out AI.\\n\\n## Preparing Evaluation Method\\n\\nFirst we need to prepare evaluation method which will be used in algorithm. Evaluation is technique that let players or algorithm decide which side is better in particular position of the board. Based on these divisions paler can decide either attack or loose and what move to do.\\n\\n[Evaluation](https://chessfox.com/example-of-the-complete-evaluation-process-of-chess-a-chess-position/) is kind of complex process, so we use a simple method for that using [piece-square tables.](https://www.chessprogramming.org/Simplified_Evaluation_Function)\\n\\n### Pawns\\n\\n```js\\n// pawn\\n 0,  0,  0,  0,  0,  0,  0,  0,\\n50, 50, 50, 50, 50, 50, 50, 50,\\n10, 10, 20, 30, 30, 20, 10, 10,\\n 5,  5, 10, 25, 25, 10,  5,  5,\\n 0,  0,  0, 20, 20,  0,  0,  0,\\n 5, -5,-10,  0,  0,-10, -5,  5,\\n 5, 10, 10,-20,-20, 10, 10,  5,\\n 0,  0,  0,  0,  0,  0,  0,  0\\n```\\n\\n### Knight\\n\\n```js\\n// knight\\n-50,-40,-30,-30,-30,-30,-40,-50,\\n-40,-20,  0,  0,  0,  0,-20,-40,\\n-30,  0, 10, 15, 15, 10,  0,-30,\\n-30,  5, 15, 20, 20, 15,  5,-30,\\n-30,  0, 15, 20, 20, 15,  0,-30,\\n-30,  5, 10, 15, 15, 10,  5,-30,\\n-40,-20,  0,  5,  5,  0,-20,-40,\\n-50,-40,-30,-30,-30,-30,-40,-50\\n```\\n\\n### Bishop\\n\\n```js\\n// bishop\\n-20,-10,-10,-10,-10,-10,-10,-20,\\n-10,  0,  0,  0,  0,  0,  0,-10,\\n-10,  0,  5, 10, 10,  5,  0,-10,\\n-10,  5,  5, 10, 10,  5,  5,-10,\\n-10,  0, 10, 10, 10, 10,  0,-10,\\n-10, 10, 10, 10, 10, 10, 10,-10,\\n-10,  5,  0,  0,  0,  0,  5,-10,\\n-20,-10,-10,-10,-10,-10,-10,-20,\\n```\\n\\n### Rook\\n\\n```js\\n//rook\\n  0,  0,  0,  0,  0,  0,  0,  0,\\n  5, 10, 10, 10, 10, 10, 10,  5,\\n -5,  0,  0,  0,  0,  0,  0, -5,\\n -5,  0,  0,  0,  0,  0,  0, -5,\\n -5,  0,  0,  0,  0,  0,  0, -5,\\n -5,  0,  0,  0,  0,  0,  0, -5,\\n -5,  0,  0,  0,  0,  0,  0, -5,\\n  0,  0,  0,  5,  5,  0,  0,  0\\n```\\n\\n### Queen\\n\\n```js\\n//queen\\n-20,-10,-10, -5, -5,-10,-10,-20,\\n-10,  0,  0,  0,  0,  0,  0,-10,\\n-10,  0,  5,  5,  5,  5,  0,-10,\\n -5,  0,  5,  5,  5,  5,  0, -5,\\n  0,  0,  5,  5,  5,  5,  0, -5,\\n-10,  5,  5,  5,  5,  5,  0,-10,\\n-10,  0,  5,  0,  0,  0,  0,-10,\\n-20,-10,-10, -5, -5,-10,-10,-20\\n```\\n\\n### King\\n\\n```js\\n//king middle game\\n-30,-40,-40,-50,-50,-40,-40,-30,\\n-30,-40,-40,-50,-50,-40,-40,-30,\\n-30,-40,-40,-50,-50,-40,-40,-30,\\n-30,-40,-40,-50,-50,-40,-40,-30,\\n-20,-30,-30,-40,-40,-30,-30,-20,\\n-10,-20,-20,-20,-20,-20,-20,-10,\\n 20, 20,  0,  0,  0,  0, 20, 20,\\n 20, 30, 10,  0,  0, 10, 30, 20\\n```\\n\\nThe middle game is defined since there is pawn shelter for king. When,\\n\\n1. Both sides have no queens or\\n2. Every side which has a queen has additionally no other pieces or one minor piece maximum.\\n\\nEnd game is defined. (But we only use middle game table for these steps.)\\n\\n### King End Game\\n\\n```js\\n// king end game\\n-50,-40,-30,-20,-20,-30,-40,-50,\\n-30,-20,-10,  0,  0,-10,-20,-30,\\n-30,-10, 20, 30, 30, 20,-10,-30,\\n-30,-10, 30, 40, 40, 30,-10,-30,\\n-30,-10, 30, 40, 40, 30,-10,-30,\\n-30,-10, 20, 30, 30, 20,-10,-30,\\n-30,-30,  0,  0,  0,  0,-30,-30,\\n-50,-30,-30,-30,-30,-30,-30,-50\\n```\\n\\n\\n## Centipawn Values\\n\\nCentipawn is the unit of measure used in chess as measure of the advantage. A centipawn is considered as equal to 1/100 of a pawn. Therefore, **100 centipawns = 1 pawn**\\n\\n- Pawns   => 100 centipawns\\n- Knight \\t=> 300 centipawns\\n- Bishop \\t=> 300 centipawns\\n- Rook    => 500 centipawns\\n- Queen   => 900 centipawns\\n\\n\\n\\n\\n# Developing AI algorithm for Play Chess\\n\\n![img.png](img.png)\\n\\nMinimax Function Algorithm\\n\\n```js\\nfunction minimax (position, depth, maximizingPlayer) {\\n    if depth == 0 or game over in position\\n        return static evaluation of position\\n    if maximizingPlayer\\n        maxEval = -infinity\\n        for each child of position\\n            eval = minimax(child, depth-1, false)\\n            maxEval = max(maxEval, eval)\\n        return maxEval\\n    else\\n        minEval = +infinity\\n        for each child of position\\n            eval = minimax(child, depth-1, true)\\n            minEval = min(minEval, eval)\\n        return minEval\\n}\\n\\n```\\n\\n\\n- position - current position\\n\\n- depth - how many moves ahead we need to search\\n\\n- maximizingPlayer = bool\\n\\n\\n## Alpha Beta Pruning\\n\\nWe can optimize this algorithm by introducing alpha beta pruning\\n\\nThis modification will speed up the code and reduce unnecessary calculations.\\n\\n```js\\nfunction minimax (position, depth, alpha, beta, maximizingPlayer) {\\n    if depth == 0 or game over in position\\n    return static evaluation of position\\n\\n    if maximizingPlayer\\n        maxEval = -infinity\\n    for each child of position\\n    eval = minimax(child, depth-1, alpha, beta, false)\\n    maxEval = max(maxEval, eval)\\n    alpha = max (alpha, eval)\\n    if beta <= alpha\\n        break\\n    return maxEval\\nelse\\n    minEval = +infinity\\n    for each child of position\\n    eval = minimax(child, depth-1, alpha, beta, true)\\n    minEval = min(minEval, eval)\\n    beta = min (beta, eval)\\n    if beta <= alpha\\n        break\\n    return minEval\\n}\\n```\\n\\nSo that\'s it, and You can refer below links if more info needed,\\n\\nMinimax Algorithm\\n- [https://www.youtube.com/watch?v=l-hh51ncgDI&ab_channel=SebastianLague](https://www.youtube.com/watch?v=l-hh51ncgDI&ab_channel=SebastianLague)\\n\\nEvaluation\\n- [https://www.chessprogramming.org/Simplified_Evaluation_Function](https://www.chessprogramming.org/Simplified_Evaluation_Function)\\n- [https://chessfox.com/example-of-the-complete-evaluation-process-of-chess-a-chess-position/](https://chessfox.com/example-of-the-complete-evaluation-process-of-chess-a-chess-position/)\\n- [https://chessquestions.com/centipawn-loss-in-chess/](https://chessquestions.com/centipawn-loss-in-chess/)\\n- [https://chess.fandom.com/wiki/Centipawn](https://chess.fandom.com/wiki/Centipawn)"},{"id":"Industry","metadata":{"permalink":"/AsgardiansCode/blog/Industry","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/Industry.md","source":"@site/blog/Industry.md","title":"Industry and WFH","description":"Do\'s","date":"2021-10-29T20:18:41.319Z","formattedDate":"October 29, 2021","tags":[{"label":"Industry","permalink":"/AsgardiansCode/blog/tags/industry"},{"label":"WFH","permalink":"/AsgardiansCode/blog/tags/wfh"}],"readingTime":0.985,"truncated":true,"authors":[{"name":"Thimira Nirmal","title":"Undergraduate of USJ","imageURL":"https://avatars.githubusercontent.com/u/42657815?s=400&u=0f92f82c8a7caab60a1c5139b0e10dbfe9d849f8&v=4","key":"timnirmal"}],"prevItem":{"title":"Chess-AI","permalink":"/AsgardiansCode/blog/Chess-AI"},"nextItem":{"title":"Jobs","permalink":"/AsgardiansCode/blog/Jobs"}},"content":"### Do\'s\\n\\n- Honor your commitments\\n  - Be punctual\\n  - Be accountable\\n- Dress appropriately\\n- Maintain your poise\\n\x3c!--truncate--\x3e\\n- Network with colleague\\n  - Learn to say no\\n  - Find a mentor\\n- Be willing to help a colleague\\n- Listen\\n- Wear a smile\\n\\n### Don\'t\\n\\n- Dont adopt a casual attitude at work\\n- Dont have personal conversations on the desk\\n- Dont gossip\\n- Dont bring emotions.\\n\\n\\n## What companies expect from you\\n\\n- Conceptual Understanding\\n- Analytical - approach solving problem\\n- Innovative thinking - beyond book\\n- Possitive outlook - adablabiity, team work, respect\\n- Communincation Skiils\\n\\n\\n# Work From Home\\n\\n## Challanges in WFH\\n- Collaboration and communication\\n- Loneliness\\n- Not being able to unplug\\n- Distractions at home\\n- Being in a different time zone than teammates\\n- Motivation\\n- Taking vacation time\\n- Finding reliable wifi\\n\\n## Advatntages of WFH\\n- Flexible Shedule\\n- Custom environment\\n- Cozy Cloths\\n- No office distraction\\n- Save money\\n- No traffic\\n- More time with loved once\\n\\n## Disadvantages of WFH\\n- Stick to routine\\n- Boring\\n- Working Slowly\\n- Distractions\\n- No Second monitor\\n- Bad Connection"},{"id":"Jobs","metadata":{"permalink":"/AsgardiansCode/blog/Jobs","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/Jobs.md","source":"@site/blog/Jobs.md","title":"Jobs","description":"Computer Vision","date":"2021-10-29T20:18:41.319Z","formattedDate":"October 29, 2021","tags":[{"label":"Jobs","permalink":"/AsgardiansCode/blog/tags/jobs"}],"readingTime":0.555,"truncated":true,"authors":[{"name":"Thimira Nirmal","title":"Undergraduate of USJ","imageURL":"https://avatars.githubusercontent.com/u/42657815?s=400&u=0f92f82c8a7caab60a1c5139b0e10dbfe9d849f8&v=4","key":"timnirmal"}],"prevItem":{"title":"Industry and WFH","permalink":"/AsgardiansCode/blog/Industry"},"nextItem":{"title":"Welcome","permalink":"/AsgardiansCode/blog/welcome"}},"content":"## Computer Vision\\nObject recognition / Detection\\nImage restoration\\nMotion Estimation (Gesture recognition, lips Reading)\\nTransportation (vehicle, traffic control)\\nApps (3d reconstruction, fun apps, image tracking)\\n\\n\x3c!--truncate--\x3e\\n\\n## Game Dev\\n\\n## Embedded Systems\\nMechanical and Electrical systems\\nWashing machine, fridge, IOT devices, Traffic light, Aviation\\n\\n## Computer Networks\\nNetwork Architect\\n\\n## Compiler and OS\\nCompiler optimization\\nAI Companies - Big data process\\n\\n## Signal Processing\\nSpeech , text , video , temperature\\nCompression\\n\\n## Integrated Circuits\\nAudio Amps\\nVideo Process\\nComputer parts\\n\\n- Applications developer\\n- Cyber security analyst\\n- Game developer\\n- Information systems manager\\n- IT consultant\\n- Multimedia programmer\\n- Web developer\\n- Web designer\\n- Software engineer"},{"id":"welcome","metadata":{"permalink":"/AsgardiansCode/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","formattedDate":"August 26, 2021","tags":[{"label":"facebook","permalink":"/AsgardiansCode/blog/tags/facebook"},{"label":"hello","permalink":"/AsgardiansCode/blog/tags/hello"},{"label":"docusaurus","permalink":"/AsgardiansCode/blog/tags/docusaurus"},{"label":"agile","permalink":"/AsgardiansCode/blog/tags/agile"},{"label":"scrum","permalink":"/AsgardiansCode/blog/tags/scrum"}],"readingTime":0.405,"truncated":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","imageURL":"https://github.com/yangshun.png","key":"yangshun"},{"name":"Thimira Nirmal","title":"Undergraduate of USJ","imageURL":"https://avatars.githubusercontent.com/u/42657815?s=400&u=0f92f82c8a7caab60a1c5139b0e10dbfe9d849f8&v=4","key":"timnirmal"}],"prevItem":{"title":"Jobs","permalink":"/AsgardiansCode/blog/Jobs"},"nextItem":{"title":"MDX Blog Post","permalink":"/AsgardiansCode/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/AsgardiansCode/blog/mdx-blog-post","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","formattedDate":"August 1, 2021","tags":[{"label":"docusaurus","permalink":"/AsgardiansCode/blog/tags/docusaurus"}],"readingTime":0.175,"truncated":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"}],"prevItem":{"title":"Welcome","permalink":"/AsgardiansCode/blog/welcome"},"nextItem":{"title":"Long Blog Post","permalink":"/AsgardiansCode/blog/long-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n\\n:::"},{"id":"long-blog-post","metadata":{"permalink":"/AsgardiansCode/blog/long-blog-post","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","formattedDate":"May 29, 2019","tags":[{"label":"hello","permalink":"/AsgardiansCode/blog/tags/hello"},{"label":"docusaurus","permalink":"/AsgardiansCode/blog/tags/docusaurus"}],"readingTime":2.05,"truncated":true,"authors":[{"name":"Endilie Yacop Sucipto","title":"Maintainer of Docusaurus","url":"https://github.com/endiliey","imageURL":"https://github.com/endiliey.png","key":"endi"}],"prevItem":{"title":"MDX Blog Post","permalink":"/AsgardiansCode/blog/mdx-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/AsgardiansCode/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!--truncate--\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/AsgardiansCode/blog/first-blog-post","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/2019-05-28-first-blog-post.md","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","date":"2019-05-28T00:00:00.000Z","formattedDate":"May 28, 2019","tags":[{"label":"hola","permalink":"/AsgardiansCode/blog/tags/hola"},{"label":"docusaurus","permalink":"/AsgardiansCode/blog/tags/docusaurus"}],"readingTime":0.12,"truncated":false,"authors":[{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"}],"prevItem":{"title":"Long Blog Post","permalink":"/AsgardiansCode/blog/long-blog-post"}},"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}')}}]);