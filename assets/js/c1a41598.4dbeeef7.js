"use strict";(self.webpackChunkasgardians=self.webpackChunkasgardians||[]).push([[8549],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2209:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={},c=void 0,l={unversionedId:"React/JS/basics",id:"React/JS/basics",isDocsHomePage:!1,title:"basics",description:"Object is like a dictionary in Python",source:"@site/docs/React/JS/basics.md",sourceDirName:"React/JS",slug:"/React/JS/basics",permalink:"/AsgardiansCode/docs/React/JS/basics",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/React/JS/basics.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tabs & Details",permalink:"/AsgardiansCode/docs/Docusaurus/Custom Components/Tabs-Details"}},u=[{value:"Array",id:"array",children:[],level:2},{value:"Functinos",id:"functinos",children:[],level:2},{value:"Custom Object (Classes)",id:"custom-object-classes",children:[],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Object is like a dictionary in Python"),(0,a.kt)("p",null,"It has name and value pairs. Name is a string and value is any Javascript value."),(0,a.kt)("p",null,"Create empty object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"var obj = new Object();\n")),(0,a.kt)("p",null,"Below is called literal object, and it is more convenient."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"var obj = {};\n")),(0,a.kt)("p",null,"This syntax is also the core of JSON format and should be preferred at all times."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"var obj = {\n    name: 'John',\n    age: 30,\n    location: {\n        address: '123 Main St',\n        city: 'New York',\n        state: 'NY'\n    }\n};\n\nconsole.log(obj.name); // John\nconsole.log(obj.location.city); // New York\nconsole.log(obj['location']['city']); // New York\n")),(0,a.kt)("p",null,"The following example creates an object prototype(Person) and an instance of that prototype(you)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function Person(name, age) {\n    this.name = name;\n    this.age = age;\n}\n\nvar you = new Person('John', 30);\n\nconsole.log(you.name); // John\nconsole.log(you.age); // 30\n")),(0,a.kt)("h2",{id:"array"},"Array"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"var arr = new Array();\nvar arr = new Array(1, 2, 3);\nvar arr = [1, 2, 3];\n\nvar a = ['dog', 'cat', 'hen'];\na.length; // 3\n")),(0,a.kt)("p",null,"Iterate over array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"for (var i = 0; i < a.length; i++) {\n    console.log(a[i]);\n}\n\nfor (const currentValue of a) {\n    // Do something with currentValue\n}\n")),(0,a.kt)("h2",{id:"functinos"},"Functinos"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function add(x, y) {\n    var total = x + y;\n    return total;\n}\n\nadd() ; // NaN\nadd(1) ; // NaN\nadd(1, 2) ; // 3\nadd(1, 2, 3) ; // 3     But only 2 arguments are accepted.\n")),(0,a.kt)("p",null,"Function have access to additional variable called arguments. It is object that contains all arguments passed to function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function add() {\n    var sum = 0;\n    for (var i = 0; i < arguments.length; i++) {\n        sum += arguments[i];\n    }\n    console.log(arguments)\n    return sum;\n}\n\n[Arguments] { '0': 2, '1': 3, '2': 4, '3': 5 }    \nadd(2, 3, 4, 5); // 14\n")),(0,a.kt)("h2",{id:"custom-object-classes"},"Custom Object (Classes)"),(0,a.kt)("p",null,"JavaScript is a prototype-based language. It uses function as objects."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function makePerson(name, age) {\n    return {\n        name: name,\n        age: age\n    };\n}\n\nfunction showPerson(person) {\n    console.log(person.name + ' is ' + person.age + ' years old.');\n}\n\nvar s = makePerson('Simon', 'Willison');\nconsole.log(s.name); // Simon\nconsole.log(showPerson(s)); // Simon is Willison years old.\n")),(0,a.kt)("p",null,"This make lots of function so we can. So we need to use this keyword.\nthis refers to current object.\nIf this is called using dot notation on object, then this refers to that object."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function Person(name, age) {\n    this.name = name;\n    this.age = age;\n\n    this.showPerson = function() {\n        console.log(this.name + ' is ' + this.age + ' years old.');\n    }\n}\n\nvar s = new Person('Simon', 'Willison');\ns.showPerson(); // Simon is Willison years old.\n")),(0,a.kt)("p",null,"new create brand new empty object. and then calls the function specified, with this set to that new object."))}d.isMDXComponent=!0}}]);