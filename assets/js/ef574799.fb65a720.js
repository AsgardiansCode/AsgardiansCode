"use strict";(self.webpackChunkasgardians=self.webpackChunkasgardians||[]).push([[332],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),p=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=i,k=m["".concat(o,".").concat(d)]||m[d]||c[d]||l;return t?r.createElement(k,a(a({ref:n},u),{},{components:t})):r.createElement(k,a({ref:n},u))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var p=2;p<l;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7760:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=t(7462),i=t(3366),l=(t(7294),t(3905)),a=["components"],s={sidebar_position:3},o=void 0,p={unversionedId:"basic/list",id:"basic/list",isDocsHomePage:!1,title:"list",description:"list1 = ['tim', 'nirmal']",source:"@site/docs/basic/list.md",sourceDirName:"basic",slug:"/basic/list",permalink:"/AsgardiansCode/docs/basic/list",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/basic/list.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"lists",permalink:"/AsgardiansCode/docs/basic/lists"},next:{title:"Tutorial Intro",permalink:"/AsgardiansCode/docs/intro"}},u=[{value:"Print",id:"print",children:[]},{value:"Join List",id:"join-list",children:[]},{value:"List Comprehension",id:"list-comprehension",children:[]},{value:"Slicing",id:"slicing",children:[]}],c={toc:u};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list1 = ['tim', 'nirmal']")),(0,l.kt)("h2",{id:"print"},"Print"),(0,l.kt)("details",null,(0,l.kt)("summary",null," ['tim', 'nirmal'] "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"print(list1)\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null," tim, nirmal "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'print( ", ".join(list1) )\n'))),(0,l.kt)("h2",{id:"join-list"},"Join List"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-.python"},'a = ( ", ".join(list1) )\n')),(0,l.kt)("h2",{id:"list-comprehension"},"List Comprehension"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Output expression,"),(0,l.kt)("li",{parentName:"ul"},"Input sequence,"),(0,l.kt)("li",{parentName:"ul"},"A variable representing a member of the input sequence and"),(0,l.kt)("li",{parentName:"ul"},"An optional predicate part.")),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst = [x ** 2 for x in range(1, 11) if x % 2 == 1]\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst2 = []\nfor x in range(1, 11):\n    if x % 2 == 1:\n        lst2.append(x ** 2)\n\nprint(lst)\nprint(lst2)\n")),(0,l.kt)("p",null,"[1, 9, 25, 49, 81]"),(0,l.kt)("p",null,"[1, 9, 25, 49, 81]")),(0,l.kt)("details",null,(0,l.kt)("summary",null," Power of 2 => [2, 4, 8, 16] "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"[2 ** x for x in range(1, 4)] \n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null," Primes / No Primes "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"    noprimes = [j for i in range(2, 8) for j in range(i * 2, 50, i)]\n    primes = [x for x in range(2, 50) if x not in noprimes]\n\n    ls = set(noprimes) # Remove duplicates\n    noprimes = list(ls)\n    \n    print(primes)\n    print(noprimes)\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null," Lowering the Characters "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'print ([x.lower() for x in ["A","B","C"]] )\n'))),(0,l.kt)("details",null,(0,l.kt)("summary",null," Extract Numbers "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'string = "my phone number is : 11122 !!"\n\nprint("\\nExtracted digits")\nnumbers = [x for x in string if x.isdigit()]\nprint (numbers)\n'))),(0,l.kt)("details",null,(0,l.kt)("summary",null," A list of list for multiplication table "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'    a = 5\n    table = [[a, b, a * b] for b in range(1, 11)]\n    \n    print("\\nMultiplication Table")\n    for i in table:\n        print (i) \n'))),(0,l.kt)("h2",{id:"slicing"},"Slicing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"[start : stop : steps]\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null," Slicing examples with Revising list "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst =list(range(1, 11))\n")),(0,l.kt)("p",null,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst1_5 = lst[1 : 5]\n")),(0,l.kt)("p",null,"[2, 3, 4, 5]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst5_8 = lst[5 : 8]\n")),(0,l.kt)("p",null,"[6, 7, 8]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst1_ = lst[1 : ]\n")),(0,l.kt)("p",null,"[2, 3, 4, 5, 6, 7, 8, 9, 10]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst_5 = lst[: 5]\n")),(0,l.kt)("p",null,"[1, 2, 3, 4, 5]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst1_8_2 = lst[1 : 8 : 2]\n")),(0,l.kt)("p",null,"[2, 4, 6, 8]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst_rev = lst[ : : -1]\n")),(0,l.kt)("p",null,"[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"lst_rev_9_5_2 = lst[9 : 4 : -2]\n")),(0,l.kt)("p",null,"[10, 8, 6]")),(0,l.kt)("h1",{id:"filtering"},"Filtering"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.geeksforgeeks.org/python-list-comprehension-and-slicing/"},"https://www.geeksforgeeks.org/python-list-comprehension-and-slicing/")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import functools\n  \n#  filtering odd numbers\nlst = filter(lambda x : x % 2 == 1, range(1, 20))\nprint (list(lst))\n   \n#  filtering odd square which are divisible by 5\nlst = filter(lambda x : x % 5 == 0, \n      [x ** 2 for x in range(1, 11) if x % 2 == 1])\nprint (list(lst))\n   \n#   filtering negative numbers\nlst = filter((lambda x: x < 0), range(-5,5))\nprint (list(lst))\n   \n#  implementing max() function, using\nprint (functools.reduce(lambda a,b: a if (a > b) else b, [7, 12, 45, 100, 15]))\n")))}m.isMDXComponent=!0}}]);