"use strict";(self.webpackChunkasgardians=self.webpackChunkasgardians||[]).push([[3558],{3905:function(n,e,t){t.d(e,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var s=r.createContext({}),p=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},u=function(n){var e=p(n.components);return r.createElement(s.Provider,{value:e},n.children)},l={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,s=n.parentName,u=c(n,["components","mdxType","originalType","parentName"]),d=p(t),f=a,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||i;return t?r.createElement(m,o(o({ref:e},u),{},{components:t})):r.createElement(m,o({ref:e},u))}));function f(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,o=new Array(i);o[0]=d;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=n,c.mdxType="string"==typeof n?n:a,o[1]=c;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5034:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],c={sidebar_position:2},s=void 0,p={unversionedId:"Codes/Simple String Function",id:"Codes/Simple String Function",isDocsHomePage:!1,title:"Simple String Function",description:"Text Wrap",source:"@site/docs/Codes/Simple String Function.md",sourceDirName:"Codes",slug:"/Codes/Simple String Function",permalink:"/AsgardiansCode/docs/Codes/Simple String Function",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/Codes/Simple String Function.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Input Patterns",permalink:"/AsgardiansCode/docs/basic/Input Patterns"},next:{title:"Machine Learning vs AI vs Deep Learning vs Neural Networks",permalink:"/AsgardiansCode/docs/Machine Learning/MLvsAI"}},u=[{value:"Text Wrap",id:"text-wrap",children:[],level:2}],l={toc:u};function d(n){var e=n.components,t=(0,a.Z)(n,o);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"text-wrap"},"Text Wrap"),(0,i.kt)("p",null,"ABCDEFGHIJKLIMNOQRSTUVWXYZ",(0,i.kt)("br",{parentName:"p"}),"\n","4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"=> ['ABCD', 'EFGH', 'IJKL', 'IMNO', 'QRST', 'UVWX', 'YZ'] \n=>  ABCD\n    EFGH\n    IJKL\n    IMNO\n    QRST\n    UVWX\n    YZ\n")),(0,i.kt)("details",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},'=> [\'ABCD\', \'EFGH\', \'IJKL\', \'IMNO\', \'QRST\', \'UVWX\', \'YZ\'] \n=>  ABCD\n    EFGH\n    IJKL\n    IMNO\n    QRST\n    UVWX\n    YZ\n\n# Code\ndef changeChar(str1, char, replacewith):\n    b = \'\'\n    for x in str1:\n        if x != char:\n            b += x\n        else:\n            b += replacewith\n    return b\n\n\ndef wrap(string, max_width):\n    a = []\n    for i in range(0, len(string), max_width):\n        a.append(string[i:i + max_width])\n        b = str(a)\n    print(b)\n    \n    d = changeChar(b, "[", "")\n    d = changeChar(d, ",", "\\n")\n    d = changeChar(d, "]", "")\n    d = changeChar(d, "\'", "")\n    d = changeChar(d, " ", "")\n\n    return d\n\n\nif __name__ == \'__main__\':\n    string, max_width = input(), int(input())\n    result = wrap(string, max_width)\n    print(result)\n\n'))))}d.isMDXComponent=!0}}]);