"use strict";(self.webpackChunkasgardians=self.webpackChunkasgardians||[]).push([[5450],{3905:function(n,e,t){t.d(e,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var o=r.createContext({}),u=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},l=function(n){var e=u(n.components);return r.createElement(o.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,o=n.parentName,l=s(n,["components","mdxType","originalType","parentName"]),m=u(t),d=a,f=m["".concat(o,".").concat(d)]||m[d]||c[d]||i;return t?r.createElement(f,p(p({ref:e},l),{},{components:t})):r.createElement(f,p({ref:e},l))}));function d(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,p=new Array(i);p[0]=m;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=n,s.mdxType="string"==typeof n?n:a,p[1]=s;for(var u=2;u<i;u++)p[u]=t[u];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2133:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return l},default:function(){return m}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),p=["components"],s={},o=void 0,u={unversionedId:"basic/Input Patterns",id:"basic/Input Patterns",isDocsHomePage:!1,title:"Input Patterns",description:"5",source:"@site/docs/basic/Input Patterns.md",sourceDirName:"basic",slug:"/basic/Input Patterns",permalink:"/AsgardiansCode/docs/basic/Input Patterns",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/basic/Input Patterns.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basic_PY",permalink:"/AsgardiansCode/docs/basic/Basic_PY"},next:{title:"Tutorial Intro",permalink:"/AsgardiansCode/docs/intro"}},l=[],c={toc:l};function m(n){var e=n.components,t=(0,a.Z)(n,p);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"5",(0,i.kt)("br",{parentName:"p"}),"\n","2 3 6 6 5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"if __name__ == '__main__':\n    n = int(input())\n    arr = map(int, input().split())\n\n    b = set(arr)\n    c = list(b)\n    d = sorted(c)\n\n    print(d[-2])\n")),(0,i.kt)("p",null,"ABCDEFGHIJKLIMNOQRSTUVWXYZ",(0,i.kt)("br",{parentName:"p"}),"\n","4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"if __name__ == '__main__':\nstring, max_width = input(), int(input())\n")),(0,i.kt)("p",null,"3",(0,i.kt)("br",{parentName:"p"}),"\n","Harry",(0,i.kt)("br",{parentName:"p"}),"\n","37.21",(0,i.kt)("br",{parentName:"p"}),"\n","Berry",(0,i.kt)("br",{parentName:"p"}),"\n","37.21",(0,i.kt)("br",{parentName:"p"}),"\n","Tina",(0,i.kt)("br",{parentName:"p"}),"\n","37.2   "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"def printdIS(name, scores):\n    print(name)\n    print(scores)\n\n\nif __name__ == '__main__':\n    for _ in range(int(input())):\n        name = input()\n        score = float(input())\n        printdIS(name, score)\n\n")),(0,i.kt)("p",null,"3",(0,i.kt)("br",{parentName:"p"}),"\n","Krishna 67 68 69",(0,i.kt)("br",{parentName:"p"}),"\n","Arjun 70 98 63",(0,i.kt)("br",{parentName:"p"}),"\n","Malika 52 56 60   "),(0,i.kt)("p",null,"=> {'Krishna': ","[67.0, 68.0, 69.0]",", 'Arjun': ","[70.0, 98.0, 63.0]",", 'Malika': ","[52.0, 56.0, 60.0]","}"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"if __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n")),(0,i.kt)("p",null,"2",(0,i.kt)("br",{parentName:"p"}),"\n","pop",(0,i.kt)("br",{parentName:"p"}),"\n","remove 9     "),(0,i.kt)("p",null,"=> list [['pop', []], ['remove', ","[9]","]]"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"if __name__ == '__main__':\n    n = int(input())\n    s = set(map(int, input().split()))\n    N = int(input())\n    student_marks = []\n    for _ in range(N):\n        b = []\n        name, *line = input().split()\n        # scores = list(map(int, line))\n\n        x = list(map(int,line))\n\n        print(x)\n\n        b.append(name)\n        b.append(list(map(int, line)))\n\n        student_marks.append(b)\n        # student_marks[name] = scores\n\n    print(\"Hi\")\n    print(student_marks)\n    print(student_marks[1][1][0])\n    print(type(student_marks[1][1][0]))\n")),(0,i.kt)("p",null,"if,\npop\nremove 9\ninsert 1 2"),(0,i.kt)("p",null,"comes up then change,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},'    s = []\n    for i in range(N):\n        if student_marks[i][0] == "pop":\n            s.pop()\n        elif student_marks[i][0] == "remove":\n            s.remove(student_marks[i][1][0])\n        elif student_marks[i][0] == "insert":\n            s.insert(student_marks[i][1][0],student_marks[i][1][1])\n')))}m.isMDXComponent=!0}}]);