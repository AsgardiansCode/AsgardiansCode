"use strict";(self.webpackChunkasgardians=self.webpackChunkasgardians||[]).push([[332],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(t),d=i,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7760:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=["components"],o={sidebar_position:3},s=void 0,p={unversionedId:"basic/list",id:"basic/list",isDocsHomePage:!1,title:"list",description:"list1 = ['tim', 'nirmal']",source:"@site/docs/basic/list.md",sourceDirName:"basic",slug:"/basic/list",permalink:"/AsgardiansCode/docs/basic/list",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/basic/list.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"lists",permalink:"/AsgardiansCode/docs/basic/lists"},next:{title:"Tutorial Intro",permalink:"/AsgardiansCode/docs/intro"}},u=[{value:"Print",id:"print",children:[]},{value:"Join List",id:"join-list",children:[]},{value:"List Comprehension",id:"list-comprehension",children:[]}],c={toc:u};function m(e){var n=e.components,t=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"list1 = ['tim', 'nirmal']")),(0,a.kt)("h2",{id:"print"},"Print"),(0,a.kt)("details",null,(0,a.kt)("summary",null," ['tim', 'nirmal'] "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"print(list1)\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null," tim, nirmal "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'print( ", ".join(list1) )\n'))),(0,a.kt)("h2",{id:"join-list"},"Join List"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-.python"},'a = ( ", ".join(list1) )\n')),(0,a.kt)("h2",{id:"list-comprehension"},"List Comprehension"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Output expression,"),(0,a.kt)("li",{parentName:"ul"},"Input sequence,"),(0,a.kt)("li",{parentName:"ul"},"A variable representing a member of the input sequence and"),(0,a.kt)("li",{parentName:"ul"},"An optional predicate part.")),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"lst = [x ** 2 for x in range(1, 11) if x % 2 == 1]\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"lst2 = []\nfor x in range(1, 11):\n    if x % 2 == 1:\n        lst2.append(x ** 2)\n\nprint(lst)\nprint(lst2)\n")),(0,a.kt)("p",null,"[1, 9, 25, 49, 81]"),(0,a.kt)("p",null,"[1, 9, 25, 49, 81]")),(0,a.kt)("details",null,(0,a.kt)("summary",null," Power of 2 => [2, 4, 8, 16] "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[2 ** x for x in range(1, 4)] \n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null," Primes / No Primes "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    noprimes = [j for i in range(2, 8) for j in range(i * 2, 50, i)]\n    primes = [x for x in range(2, 50) if x not in noprimes]\n\n    ls = set(noprimes) # Remove duplicates\n    noprimes = list(ls)\n    \n    print(primes)\n    print(noprimes)\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null," Lowering the Characters "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'print ([x.lower() for x in ["A","B","C"]] )\n'))),(0,a.kt)("details",null,(0,a.kt)("summary",null," Extract Numbers "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'string = "my phone number is : 11122 !!"\n\nprint("\\nExtracted digits")\nnumbers = [x for x in string if x.isdigit()]\nprint (numbers)\n'))),(0,a.kt)("details",null,(0,a.kt)("summary",null," A list of list for multiplication table "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    a = 5\n    table = [[a, b, a * b] for b in range(1, 11)]\n    \n    print("\\nMultiplication Table")\n    for i in table:\n        print (i) \n'))))}m.isMDXComponent=!0}}]);