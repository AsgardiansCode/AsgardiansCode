"use strict";(self.webpackChunkasgardians=self.webpackChunkasgardians||[]).push([[332],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7760:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={sidebar_position:3},s=void 0,c={unversionedId:"basic/list",id:"basic/list",isDocsHomePage:!1,title:"list",description:"list1 = ['tim', 'nirmal']",source:"@site/docs/basic/list.md",sourceDirName:"basic",slug:"/basic/list",permalink:"/AsgardiansCode/docs/basic/list",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/basic/list.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"lists",permalink:"/AsgardiansCode/docs/basic/lists"},next:{title:"Tutorial Intro",permalink:"/AsgardiansCode/docs/intro"}},u=[{value:"Join List",id:"join-list",children:[]},{value:"List Comprehension",id:"list-comprehension",children:[]}],p={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"list1 = ['tim', 'nirmal']")),(0,a.kt)("details",null,(0,a.kt)("summary",null," ['tim', 'nirmal'] "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"print(list1)\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null," tim, nirmal "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'print( ", ".join(list1) )\n'))),(0,a.kt)("h2",{id:"join-list"},"Join List"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-.python"},'a = ( ", ".join(list1) )\n')),(0,a.kt)("h2",{id:"list-comprehension"},"List Comprehension"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Output expression,"),(0,a.kt)("li",{parentName:"ul"},"Input sequence,"),(0,a.kt)("li",{parentName:"ul"},"A variable representing a member of the input sequence and"),(0,a.kt)("li",{parentName:"ul"},"An optional predicate part.")),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"lst = [x ** 2 for x in range(1, 11) if x % 2 == 1]\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"lst2 = []\nfor x in range(1, 11):\n    if x % 2 == 1:\n        lst2.append(x ** 2)\n\nprint(lst)\nprint(lst2)\n")),(0,a.kt)("p",null,"[1, 9, 25, 49, 81]"),(0,a.kt)("p",null,"[1, 9, 25, 49, 81]")))}m.isMDXComponent=!0}}]);